{
  "stats": {
    "suites": 1,
    "tests": 2,
    "passes": 1,
    "pending": 0,
    "failures": 1,
    "start": "2024-12-02T07:01:10.244Z",
    "end": "2024-12-02T07:01:27.620Z",
    "duration": 17376,
    "testsRegistered": 2,
    "passPercent": 50,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "71e4a6f5-5111-4f86-953f-def3952509be",
      "title": "",
      "fullFile": "cypress\\e2e\\assertions.cy.js",
      "file": "cypress\\e2e\\assertions.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "04687b7c-5a49-4fb7-bad5-f30e674037c6",
          "title": "assertions",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "implicit assertions",
              "fullTitle": "assertions implicit assertions",
              "timedOut": null,
              "duration": 4006,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://opensource-demo.orangehrmlive.com/web/index.php/auth/login\");\n//should and\n//cy.url().should('include','orangehrmlive.com') //checking the text in the provided URL\n//cy.url().should('eq','https://opensource-demo.orangehrmlive.com/web/index.php/auth/login') //checking the URL\n//cy.url().should('contain','orangehrm')\n//cy.url().should('include','orangehrmlive.com')\n//.should('eq','https://opensource-demo.orangehrmlive.com/web/index.php/auth/login')\ncy.url().should('include', 'orangehrmlive.com').and('eq', 'https://opensource-demo.orangehrmlive.com/web/index.php/auth/login') //checking the URL\n.and('contain', 'orangehrm').and('not.contain', 'greenhrm');\n//be.visible - one more assertion\ncy.get(\"input[placeholder='Username']\").type(\"Admin\"); //provide value to text box\ncy.get(\"input[placeholder='Username']\").should('have.value', 'Admin');",
              "err": {},
              "uuid": "4fa68660-ec0f-48d3-963d-29cd62300274",
              "parentUUID": "04687b7c-5a49-4fb7-bad5-f30e674037c6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "explicit assertions",
              "fullTitle": "assertions explicit assertions",
              "timedOut": null,
              "duration": 6951,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.visit(\"https://opensource-demo.orangehrmlive.com/web/index.php/auth/login\");\ncy.get(\"input[placeholder='Username']\").type('Admin');\ncy.get(\"input[placeholder='Password']\").type('admin123');\ncy.get(\"button[type='submit']\").click();\n//javascript for explict assertions\nlet expName = \"testFN testLN\"; //let is a keyword used in js to define any variable\ncy.get(\".oxd-userdropdown-name\").then(x => {\n  //variable of name copied to x\n  let actName = x.text; //using x parameter into body of the method\n  //BDD style we use expect keyword\n  expect(actName).to.eq(expName);\n  expect(actName).to.not.eq(expName);\n  //TDD style use assert keyword\n  assert.equal(actName, expName);\n  assert.notEqual(actName, expName);\n});",
              "err": {
                "message": "AssertionError: expected [Function: text] to equal 'testFN testLN'",
                "estack": "AssertionError: expected [Function: text] to equal 'testFN testLN'\n    at Context.eval (webpack:///./cypress/e2e/assertions.cy.js:37:29)",
                "diff": "- [Function: text]\n+ 'testFN testLN'\n"
              },
              "uuid": "f9716aaa-aece-4a26-a626-29da5cd1402e",
              "parentUUID": "04687b7c-5a49-4fb7-bad5-f30e674037c6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4fa68660-ec0f-48d3-963d-29cd62300274"
          ],
          "failures": [
            "f9716aaa-aece-4a26-a626-29da5cd1402e"
          ],
          "pending": [],
          "skipped": [],
          "duration": 10957,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}